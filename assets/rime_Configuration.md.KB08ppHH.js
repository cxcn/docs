import{_ as s,c as i,o as a,U as n}from"./chunks/framework.WKpLpN6N.js";const o=JSON.parse('{"title":"Rime 配置文件","description":"","frontmatter":{},"headers":[],"relativePath":"rime/Configuration.md","filePath":"home.wiki/Configuration.md"}'),l={name:"rime/Configuration.md"},p=n(`<h1 id="rime-配置文件" tabindex="-1">Rime 配置文件 <a class="header-anchor" href="#rime-配置文件" aria-label="Permalink to &quot;Rime 配置文件&quot;">​</a></h1><ul><li><a href="#rime-配置文件">Rime 配置文件</a><ul><li><a href="#文件格式">文件格式</a></li><li><a href="#位置及組織方式">位置及組織方式</a></li><li><a href="#語法">語法</a><ul><li><a href="#包含">包含</a></li><li><a href="#補靪">補靪</a></li><li><a href="#用補靪指令修改列表">用補靪指令修改列表</a></li><li><a href="#可選的包含與補靪">可選的包含與補靪</a></li><li><a href="#追加與合併">追加與合併</a></li></ul></li><li><a href="#配置編譯器插件">配置編譯器插件</a><ul><li><a href="#自動應用補靪">自動應用補靪</a></li><li><a href="#應用默認配置">應用默認配置</a></li><li><a href="#導入成套組件配置">導入成套組件配置</a></li><li><a href="#導入韻書配置">導入韻書配置</a></li></ul></li><li><a href="#加載規則">加載規則</a></li><li><a href="#配置組件調用方式">配置組件調用方式</a></li><li><a href="#代碼風格">代碼風格</a></li><li><a href="#錯誤處理">錯誤處理</a></li><li><a href="#版本控制">版本控制</a></li><li><a href="#分發">分發</a></li></ul></li></ul><p>Rime 配置文件，用於設置輸入法引擎、輸入法客戶端的運行參數，也包括輸入方案及詞典配置。</p><h2 id="文件格式" tabindex="-1">文件格式 <a class="header-anchor" href="#文件格式" aria-label="Permalink to &quot;文件格式&quot;">​</a></h2><p>採用 UTF-8 編碼的 <a href="http://yaml.org/" target="_blank" rel="noreferrer">YAML</a> 文本。</p><h2 id="位置及組織方式" tabindex="-1">位置及組織方式 <a class="header-anchor" href="#位置及組織方式" aria-label="Permalink to &quot;位置及組織方式&quot;">​</a></h2><p>Rime 所使用的配置文件在 [[用戶文件夾|UserData]] 及 [[共享文件夾|SharedData]]。</p><h2 id="語法" tabindex="-1">語法 <a class="header-anchor" href="#語法" aria-label="Permalink to &quot;語法&quot;">​</a></h2><p>在 <a href="http://yaml.org/" target="_blank" rel="noreferrer">YAML</a> 語法的基礎上，增設以下編譯指令：</p><h3 id="包含" tabindex="-1">包含 <a class="header-anchor" href="#包含" aria-label="Permalink to &quot;包含&quot;">​</a></h3><p><code>__include:</code> 指令在當前位置包含另一 YAML 節點的內容。</p><p>可寫在配置源文件任一 YAML map 節點下。其語法爲</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">include_example_1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  __include</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">local/node</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">local</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  node</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">contents to include</span></span></code></pre></div><p>被引用的節點可以來自另一個配置文件。 目標配置節點的路徑以 <code>&lt;filename&gt;:/</code> 開始，可省略擴展名 <code>.yaml</code>。</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">include_example_2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  __include</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">config:/external/node</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">include_example_3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  __include</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">config.yaml:/external/node</span></span></code></pre></div><p>包含整個文件，可指定路徑爲目標配置文件的根節點：</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">include_example_4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  __include</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">config.yaml:/</span></span></code></pre></div><p>包含另一個 YAML map 節點後，源文件中 <code>__include:</code> 指令所在 map 除編譯指令外的其他數據與被包含的 map 合併：</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">include_example_5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  __include</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">some_map</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  occupation</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">journalist</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # new key and value</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  simplicity</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">very</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # override value for included key</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">some_map</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  simplicity</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">somewhat</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  naivety</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">sometimes</span></span></code></pre></div><p>合併發生在 <code>__include:</code> 指令所在節點，不會修改被引用節點 <code>some_map</code> 的內容。</p><p>包含 YAML 列表，則指令所在 map 節點替換爲所引用的 YAML 列表。 該 map 節點不應包含任何編譯指令以外的 key-value，因爲不相容於 YAML 列表類型。</p><p>也不能直接在該節點下追加列表項，因爲 YAML 語法不允許混合 map 與 list。 在包含列表後追加、修改列表項，必須使用下文介紹的 <code>__append:</code> 或 <code>__patch:</code> 指令。</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">include_example_6</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  __include</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">some_list</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  __append</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">someone else</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">some_list</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">youngster</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">elder</span></span></code></pre></div><h3 id="補靪" tabindex="-1">補靪 <a class="header-anchor" href="#補靪" aria-label="Permalink to &quot;補靪&quot;">​</a></h3><p>修改某一相對路徑下的配置節點，而非當前節點的整體。 基本語法爲：</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">__patch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  key/alpha</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">value A</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  key/beta</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">value B</span></span></code></pre></div><p>目標節點路徑的寫法爲將各級 map 的 key 用 <code>/</code> 分隔。 因此 <code>key</code> 如果包含 <code>/</code> 字符，則不能作爲節點路徑的一部分。</p><p>可在節點路徑末尾添加 <code>/+</code> 操作符，表示合併 list 或 map 節點； 或者（可選地）添加 <code>/=</code> 表示用指定的值替換目標節點原有的值。 若未指定操作符，<code>__patch:</code> 指令的默認操作爲替換。</p><p>以下是一些示例：</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">patch_example_1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  sibling</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">old value</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  append_to_list</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">existing item</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  merge_with_map</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    key</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">value</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  replace_list</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">item 1</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">item 2</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  replace_map</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    a</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">value</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    b</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">value</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  __patch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    sibling</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">new value</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    append_to_list/+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">appended item</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    merge_with_map/+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      key</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">new value</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      new_key</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">value</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    replace_list/=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">only item</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    replace_map/=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      only_key</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">value</span></span></code></pre></div><p>以上示例僅爲表現 <code>__patch:</code> 的作用方式。 實際上在當前節點和補靪內容均爲字面值的情況下，沒有打補靪的必要。 字面值補靪通常用於當前節點包含了其他節點，並需要修改部份配置項的場景：</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">patch_example_2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  __include</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">patch_example_1</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  __patch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    sibling</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">even newer value</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    append_to_list/+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">another appended item</span></span></code></pre></div><p>由於 YAML map 的 key 是無序的，書寫順序並不決定編譯指令的先後。</p><p>同一節點下，編譯指令的執行順序爲： <code>__include:</code> 包含指定節點 → 合併當前節點下的其他 key-value 數據 → <code>__patch:</code> 修改子節點。</p><p><code>__patch:</code> 指令的另一種主要用法是引用另一個節點中的補靪內容，並作用於指令所在節點：</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">patch_example_3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  __patch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">changes</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  some_list</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">youngster</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">elder</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  some_map</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    simplicity</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">somewhat</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    naivety</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">sometimes</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">changes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  some_list/+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">someone else</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  some_map/simplicity</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">too much</span></span></code></pre></div><p>YAML 語法不允許 map 有重複的 key。 如果要引用不同位置的多項補靪，可以爲 <code>__patch:</code> 指定一個列表，其中每項通過節點引用定義一組補靪：</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">patch_example_4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  __include</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">base_config</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  __patch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">company_standard</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">team_convention</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">personal_preference</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">base_config</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  actors</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: []</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  company_info</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    based_in</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">unknown location</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  favorites</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">company_standard</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  company_info/based_in</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">american san diego</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">team_convention</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  actors/+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">feifei</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">meimei</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">riri</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">personal_preference</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  favorites/fertilizer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">jinkela</span></span></code></pre></div><h3 id="用補靪指令修改列表" tabindex="-1">用補靪指令修改列表 <a class="header-anchor" href="#用補靪指令修改列表" aria-label="Permalink to &quot;用補靪指令修改列表&quot;">​</a></h3><p>補靪指令中，目標節點路徑由各級節點的 key 組成。 若某一節點爲 list 類型，可以 <code>@&lt;下標&gt;</code> 形式指定列表項。下標從 0 開始計數。 無論列表長度，末位列表元素可表示爲 <code>@last</code>。</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">patch_list_example_1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  some_list/@0/simplicity</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">very</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  some_list/@last/naivety</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">always</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">some_list</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  - </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">simplicity</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">somewhat</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  - </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">naivety</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">sometimes</span></span></code></pre></div><p>在指定元素之前、之後插入列表元素，用 <code>@before &lt;下標&gt;</code>、<code>@after &lt;下標&gt;</code>。 <code>@after last</code> 可簡寫爲 <code>@next</code>，向列表末尾添加元素：</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">patch_list_example_2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &#39;some_list/@before 0/youthfulness&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">too much</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &#39;some_list/@after last/velocity&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">greater than westerners</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  some_list/@next/questions</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">no good</span></span></code></pre></div><h3 id="可選的包含與補靪" tabindex="-1">可選的包含與補靪 <a class="header-anchor" href="#可選的包含與補靪" aria-label="Permalink to &quot;可選的包含與補靪&quot;">​</a></h3><p>若包含或補靪指令的目標是以 <code>?</code> 結尾的節點路徑， 則當該路徑對應的節點（或所屬外部配置文件）不存在時，不產生編譯錯誤。</p><p>如：</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">__patch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">default.custom:/patch?</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">nice_to_have</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  __include</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">optional_config?</span></span></code></pre></div><h3 id="追加與合併" tabindex="-1">追加與合併 <a class="header-anchor" href="#追加與合併" aria-label="Permalink to &quot;追加與合併&quot;">​</a></h3><p>追加指令 <code>__append:</code> 將其下的列表項追加到該指令所在的節點。 合併指令 <code>__merge:</code> 將其下的 map 合併到該指令所在的節點。</p><p>這兩條指令只能用在 <code>__include:</code> 指令所在節點及其（字面值）子節點。</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">append_merge_example_1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  __include</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">starcraft</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  __merge</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    made_by</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">blizzard entertainment</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    races</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      __append</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">protoss</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">zerg</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">starcraft</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  first_release</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1998</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  races</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">terrans</span></span></code></pre></div><p>實際書寫配置時，<code>__merge:</code> 指令往往省略。 因爲 <code>__include:</code> 指令自動合併其所在節點下的 key-value 並遞歸地合併所有 map 類型的子節點。</p><p>而對於類型爲 list 的子節點，默認操作是替換整個列表。 如果要以向後追加列表項的方式合併，除了 <code>__append:</code> 指令之外，還可以採用 <code>/+</code> 操作符：</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">append_merge_example_2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  __include</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">starcraft</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  made_by</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">blizzard entertainment</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  races/+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">protoss</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">zerg</span></span></code></pre></div><p>在 <code>__include:</code> 指令自動合併的節點樹中，如果要對某個 map 類型的子節點整體替換，可使用 <code>/=</code> 操作符：</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">revealed_map</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  __include</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">old_map</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  terran_command_center/=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    x</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3.14</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    y</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">6.28</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">old_map</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  terran_command_center</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    location</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">unexplored</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  protoss_nexus</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">x</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">128</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">y</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">256</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  zerg_hatchary</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">x -1024</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">y</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>案例解析：</p><ul><li><a href="https://github.com/rime/librime/pull/192#issuecomment-371202389" target="_blank" rel="noreferrer">https://github.com/rime/librime/pull/192#issuecomment-371202389</a></li></ul><h2 id="配置編譯器插件" tabindex="-1">配置編譯器插件 <a class="header-anchor" href="#配置編譯器插件" aria-label="Permalink to &quot;配置編譯器插件&quot;">​</a></h2><p>自動添加一些隱含的編譯指令，用來實現對原有補靪機制以及導入成套組件配置等語法的兼容。</p><p>這些插件的作用是將當前輸入方案所需的全部配置內容在部署期間彙總到一份編譯結果文件裏。使輸入法程序不必在運行時打開衆多的配置文件。</p><h3 id="自動應用補靪" tabindex="-1">自動應用補靪 <a class="header-anchor" href="#自動應用補靪" aria-label="Permalink to &quot;自動應用補靪&quot;">​</a></h3><p>配置文件的根節點如果沒有使用 <code>__patch:</code> 指令，則在源文件編譯完成後，自動插入以下指令：</p><p>（註：請將實際的配置名稱代入 <code>&lt;config&gt;</code>）</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># &lt;config&gt;.yaml 或 &lt;config&gt;.schema.yaml 的根節點</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">__patch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&lt;config&gt;.custom:/patch?</span></span></code></pre></div><p>如果存在與舊版本 librime 兼容的補靪文件，則從中加載補靪：</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># &lt;config&gt;.custom.yaml</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">patch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  key</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">value</span></span></code></pre></div><p>以上插件的效果相當於</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># &lt;config&gt;.yaml 或 &lt;config&gt;.schema.yaml 的根節點</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">__patch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  key</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">value</span></span></code></pre></div><p>如果源文件的根節點使用了 <code>__patch:</code> 指令，則不論其是否加載 <code>&lt;config&gt;.custom:/patch</code>，都不再添加自動補靪指令。 如果這種情況下仍希望支持補靪文件，須將其列爲 <code>__patch:</code> 列表中的一項：</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># &lt;config&gt;.yaml 或 &lt;config&gt;.schema.yaml 的根節點</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">__patch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">other_patch</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # ...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&lt;config&gt;.custom:/patch?</span></span></code></pre></div><h3 id="應用默認配置" tabindex="-1">應用默認配置 <a class="header-anchor" href="#應用默認配置" aria-label="Permalink to &quot;應用默認配置&quot;">​</a></h3><p>輸入方案中未指定以下配置項時，自動導入默認配置 <code>default.yaml</code> 的定義：</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">menu</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  page_size</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># ...</span></span></code></pre></div><h3 id="導入成套組件配置" tabindex="-1">導入成套組件配置 <a class="header-anchor" href="#導入成套組件配置" aria-label="Permalink to &quot;導入成套組件配置&quot;">​</a></h3><p>將部份組件配置中的 <code>&lt;component&gt;/import_preset: &lt;config&gt;</code> 語法翻譯爲</p><p>（註：請將實際的配置名稱和組件名稱代入 <code>&lt;config&gt;</code>、<code>&lt;component&gt;</code>）</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">&lt;component&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  __include</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&lt;config&gt;:/&lt;component&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 以下爲輸入方案覆蓋定義的內容</span></span></code></pre></div><p>注意：如果指定的配置節點 <code>&lt;config&gt;:/&lt;component&gt;</code> 不存在會導致輸入方案編譯錯誤。</p><h3 id="導入韻書配置" tabindex="-1">導入韻書配置 <a class="header-anchor" href="#導入韻書配置" aria-label="Permalink to &quot;導入韻書配置&quot;">​</a></h3><p>（尚未實現）導入 <code>*.dict.yaml</code> 的 YAML 配置部份。</p><h2 id="加載規則" tabindex="-1">加載規則 <a class="header-anchor" href="#加載規則" aria-label="Permalink to &quot;加載規則&quot;">​</a></h2><p>以上介紹的編譯指令及編譯器插件，僅對交給 <em>配置編譯器</em> 處理的 <em>源文件</em> 有效。</p><p>配置源文件的位置詳見 [[用戶文件夾|UserData]] 及 [[共享文件夾|SharedData]]。</p><p>輸入法程序運行時讀取的配置文件是 <em>編譯結果文件</em>（可能是 YAML 格式或二進制格式）。 編譯結果只包含直接供程序讀取的配置內容，而不再包含有特殊含義的編譯指令。</p><p>配置的編譯結果文件與源文件並非一一對應的關係， 而是合併重組爲編譯後的默認配置 <code>default</code> 以及各輸入方案的配置。</p><p>其他不經過編譯處理而直接在運行時由輸入法程序存取的配置文件有： <code>installation.yaml</code>, <code>user.yaml</code> 等。</p><p><em>韻書</em> 文件中的 YAML 配置部份目前也不支持配置編譯指令。</p><p>TODO(rime/docs): 詳解\x07 YAML 節點樹及編譯指令的解析、執行順序</p><h2 id="配置組件調用方式" tabindex="-1">配置組件調用方式 <a class="header-anchor" href="#配置組件調用方式" aria-label="Permalink to &quot;配置組件調用方式&quot;">​</a></h2><p>TODO(rime/engine): 完成本節</p><h2 id="代碼風格" tabindex="-1">代碼風格 <a class="header-anchor" href="#代碼風格" aria-label="Permalink to &quot;代碼風格&quot;">​</a></h2><p>YAML 書寫樣式參照 <a href="http://yaml.org/" target="_blank" rel="noreferrer">yaml.org</a> 的示例。推薦以下風格：</p><p>配置文件開頭用註釋行簡述文件的內容和使用方法。</p><p>縮進：用兩個空格縮進。</p><p>字符串值：無特殊字符時不使用引號； 需要使用引號時，優先用單引號，以減少雙引號引起的字符轉義問題。</p><p>flow-style list: 僅在節點樹的最內層使用。不嵌套使用。元素較多時不用。</p><p>flow-style map: 僅在節點樹的最內層使用。不嵌套使用。元素較多時不用。</p><p>僅包含一對 key-value 的 map 作爲列表項時，省略 <code>{ }</code> 並與 <code>-</code> 寫在同一行。</p><p>不推薦使用 YAML 的錨點（<code>&amp;</code>）和別名引用（<code>*</code>）。請用本文介紹的 <code>__include:</code> 編譯指令。</p><h2 id="錯誤處理" tabindex="-1">錯誤處理 <a class="header-anchor" href="#錯誤處理" aria-label="Permalink to &quot;錯誤處理&quot;">​</a></h2><p>部署後出現錯誤，請查看 <code>INFO</code> 日誌（<a href="https://github.com/rime/home/wiki/RimeWithSchemata#%E9%97%9C%E6%96%BC%E8%AA%BF%E8%A9%A6" target="_blank" rel="noreferrer">參考</a>）， 找到行首字符爲 <code>E</code> 的記錄，根據錯誤信息以及上下文排查出錯的配置文件。</p><p>未出現錯誤信息，配置亦未達到預期效果，請對照 <code>&lt;用戶文件夾&gt;/build/</code> 文件夾內的編譯結果文件，檢查配置源文件與補靪。</p><h2 id="版本控制" tabindex="-1">版本控制 <a class="header-anchor" href="#版本控制" aria-label="Permalink to &quot;版本控制&quot;">​</a></h2><p>輸入方案及配置的版本可以用文件中的一項 <em>字符串值</em> 記錄。如：<code>version: &#39;3.14&#39;</code></p><p>版本號習慣以形爲 <code>X.Y.Z</code> 的多個數字組成。 爲避免將版本號解析爲 YAML 數值類型而發生錯誤，如 <code>0.10</code>（〇點十）不同於 <code>0.1</code>（〇點一）， 應一律爲版本號加上引號 <code>&#39;3.14&#39;</code> 以示其爲字符串類型。</p><h2 id="分發" tabindex="-1">分發 <a class="header-anchor" href="#分發" aria-label="Permalink to &quot;分發&quot;">​</a></h2><p>輸入方案設計師完成輸入方案及配套韻書後，將源文件發佈在一間 <a href="https://github.com" target="_blank" rel="noreferrer">GitHub</a> 代碼庫， 用家便可通過 Rime 配置管理工具 <a href="https://github.com/rime/plum" target="_blank" rel="noreferrer">東風破</a> 獲取輸入方案的最新版本並安裝到輸入法。</p>`,108),e=[p];function h(t,k,d,E,r,c){return a(),i("div",null,e)}const y=s(l,[["render",h]]);export{o as __pageData,y as default};
